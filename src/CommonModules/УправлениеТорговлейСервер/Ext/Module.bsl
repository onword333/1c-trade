// Получает значение ставки НДС
// Параметры:
//  СтавкаНДС - Справочник.СтавкаНДС - элемент справочника
// 
// Возвращаемое значение:
//  Число - значение ставки
Функция ПолучитьЗначениеСтавкиНДС(СтавкаНДС) Экспорт
	Возврат ?(ЗначениеЗаполнено(СтавкаНДС), СтавкаНДС.Ставка, 0)
КонецФункции


#Область УправлениеПроведением

// Выполняет инициализацию дополнительных свойств для проведения документа
//
// Параметры:
//  ДокументСсылка  - Документ.Ссылка - сслыка на документ
//  СтруктураДополнительныеСвойства  - Структура - дополнительные свойства документа
//
Процедура ИнициализироватьДополнительныеСвойстваДляПроведения(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	СтруктураДополнительныеСвойства.Вставить("ТаблицыДляДвижений", Новый Структура);
	СтруктураДополнительныеСвойства.Вставить("ДляПроведения", Новый Структура);
	
	ДляПроведения = СтруктураДополнительныеСвойства.ДляПроведения;
	ДляПроведения.Вставить("СтруктураВременныеТаблицы", Новый Структура("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц));
	ДляПроведения.Вставить("МетаданныеДокумента", ДокументСсылка.Метаданные());
	
	МетаданныеДокумента = ДляПроведения.МетаданныеДокумента;
	
	ИмяДокумента = МетаданныеДокумента.Имя;
	СуществуетРеквизитОрганизация = МетаданныеДокумента.Реквизиты.Найти("Организация");
	ВыражениеРеквизитаОрганизация = ? (СуществуетРеквизитОрганизация <> Неопределено, "Док.Организация", "ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Док.Ссылка КАК Ссылка,
		|	Док.Номер КАК Номер,
		|	Док.Дата КАК Дата,
		|	" + ВыражениеРеквизитаОрганизация + " КАК Организация,
		|	Док.МоментВремени КАК МоментВремени,
		|	Док.Представление КАК Представление
		|ИЗ
		|	Документ." + ИмяДокумента + " КАК Док
		|ГДЕ
		|	Док.Ссылка = &ДокументСсылка";
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Для каждого Колонка Из РезультатЗапроса.Колонки Цикл
		ДляПроведения.Вставить(Колонка.Имя);
	КонецЦикла; 
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	ЗаполнитьЗначенияСвойств(ДляПроведения, Выборка);
	
	// Определение и установка значения момента, на который должен быть выполнен контроль документа.
	ДляПроведения.Вставить("МоментКонтроля", Дата('00010101'));
	ДляПроведения.Вставить("ПериодКонтроля", Дата("39991231"));
КонецПроцедуры // ИнициализироватьДополнительныеСвойстваДляПроведения()


// Заполняет регистр накопления ЗапасыНаСкладах движениями и записывает их
//
// Параметры:
//  СтруктураДополнительныеСвойства  - Структура - структура дополнительных свойств документа                 
//  Движения  - КоллекцияДвижений - набор записей документа
//	Отказ - Булево - признак записи документа
//
Процедура ОтразитьЗапасыНаСкладах(СтруктураДополнительныеСвойства, Движения, Отказ) Экспорт
	ТаблицаЗапасыНаСкладах = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасыНаСкладах;
	
	Если (Отказ ИЛИ ТаблицаЗапасыНаСкладах.Количество() = 0) Тогда
		Возврат;
	КонецЕсли; 
	
	ДвиженияЗапасыНаСкладах = Движения.ОстаткиНоменклатуры;
	ДвиженияЗапасыНаСкладах.Записывать = Истина;
	ДвиженияЗапасыНаСкладах.Загрузить(ТаблицаЗапасыНаСкладах);
	
КонецПроцедуры // ОтразитьЗапасыНаСкладах()
 
#КонецОбласти