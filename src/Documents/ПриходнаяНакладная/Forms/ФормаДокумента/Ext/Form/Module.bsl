#Область ОбработчикиСобытийФормы
	// Код процедур и функций
#КонецОбласти



#Область ОбработчикиСобытийЭлементовШапкиФормы
	// Код процедур и функций
#КонецОбласти



#Область ОбработчикиСобытийЭлементовТаблицыФормыЗапасы

	&НаКлиенте
	Процедура ЗапасыНоменклатураПриИзменении(Элемент)
		СтрокаТабличнойЧасти = Элементы.Запасы.ТекущиеДанные;
		
		СтруктураДанные = Новый Структура;
		СтруктураДанные.Вставить("Номенклатура", СтрокаТабличнойЧасти.Номенклатура);
		
		СтруктураДанные = ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные);
		
		СтрокаТабличнойЧасти.СтавкаНДС = СтруктураДанные.СтавкаНДС;
		СтрокаТабличнойЧасти.ЕдиницаИзмерения = СтруктураДанные.ЕдиницаИзмерения;
		РассчитатьСуммуВСтрокеТабличнойЧасти("Запасы");
	КонецПроцедуры

	
	&НаКлиенте
	Процедура ЗапасыКоличествоПриИзменении(Элемент)
		РассчитатьСуммуВСтрокеТабличнойЧасти("Запасы");
	КонецПроцедуры
	
	
	&НаКлиенте
	Процедура ЗапасыЦенаПриИзменении(Элемент)
		РассчитатьСуммуВСтрокеТабличнойЧасти("Запасы");
	КонецПроцедуры
	
	
	&НаКлиенте
	Процедура ЗапасыЕдиницаИзмеренияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
		ТекущаяСтрока = Элементы.Запасы.ТекущиеДанные;
		
		Если (ТекущаяСтрока.ЕдиницаИзмерения = ВыбранноеЗначение)
			ИЛИ (ТекущаяСтрока.Цена = 0) Тогда			
			Возврат;
		КонецЕсли; 
		
		СтруктураДанные = ПолучитьДанныеЕдиницаИзмеренияПриИзменении(ТекущаяСтрока.ЕдиницаИзмерения, ВыбранноеЗначение);
		
		Если (СтруктураДанные.ТекущийКоэффициент <> 0) Тогда
			ТекущаяСтрока.Цена = ТекущаяСтрока.Цена * СтруктураДанные.ВыбранныйКоэффициент / СтруктураДанные.ТекущийКоэффициент;
		КонецЕсли; 
		
		РассчитатьСуммуВСтрокеТабличнойЧасти("Запасы");
	КонецПроцедуры

#КонецОбласти



#Область ОбработчикиКомандФормы
#КонецОбласти



#Область СлужебныеПроцедурыИФункции

	// Рассчитывает сумму в строке табичной части
	//
	// Параметры:
	//  ИмяТабЧасти  - Строка - название табличной части
	//
	&НаКлиенте
	Процедура РассчитатьСуммуВСтрокеТабличнойЧасти(ИмяТабЧасти, СтрокаТабЧасти = Неопределено)
		Если (СтрокаТабЧасти = Неопределено) Тогда
			СтрокаТабЧасти = Элементы[ИмяТабЧасти].ТекущиеДанные;
		КонецЕсли;
		СтрокаТабЧасти = Элементы.Запасы.ТекущиеДанные;
		УправлениеТорговлейКлиент.РассчитатьСуммыВСтрокеТЧ(СтрокаТабЧасти);
	КонецПроцедуры // ПересчетСтрокиЗапасов2()


	// Получает данные номенклатуры
	//
	// Параметры:
	//  СтруктураДанные  - Соответствие - ключ и значение
	//
	// Возвращаемое значение:
	//  Соответствие   - ключ и значение
	//
	&НаСервереБезКонтекста
	Функция ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные)
		СтруктураДанные.Вставить("СтавкаНДС", СтруктураДанные.Номенклатура.СтавкаНДС);
		СтруктураДанные.Вставить("ЕдиницаИзмерения", СтруктураДанные.Номенклатура.ЕдиницаИзмерения);
		Возврат СтруктураДанные;
	КонецФункции // ПолучитьДанныеНоменклатураПриИзменении()

	
	// Получает информцию о коэффициентах выбранных ед. измерении
	//
	// Параметры:
	//  ТекущаяЕдиницаИзмерения		 - СправочникСсылка.ЕдиницыИзмерения, СправочникСсылка.КлассификаторЕдиницИзмерения 	 - ссылка на элемента справочника
	//  ВыбраннаяЕдиницаИзмерения	 - СправочникСсылка.ЕдиницыИзмерения, СправочникСсылка.КлассификаторЕдиницИзмерения 	 - ссылка на элемента справочника
	// 
	// Возвращаемое значение:
	//   Структура - содержит значения коэффициентов для переданных ед. измерения
	//
	&НаСервереБезКонтекста
	Функция ПолучитьДанныеЕдиницаИзмеренияПриИзменении(ТекущаяЕдиницаИзмерения = Неопределено, ВыбраннаяЕдиницаИзмерения = Неопределено)
		СтруктураДанные = Новый Структура;
		
		Если (ТекущаяЕдиницаИзмерения = Неопределено) Тогда
			СтруктураДанные.Вставить("ТекущийКоэффициент", 1);
		Иначе
			ТипЗнчКлассификаторЕдиницИзмерения = (ТипЗнч(ТекущаяЕдиницаИзмерения) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения"));
		    СтруктураДанные.Вставить("ТекущийКоэффициент", ? (ТипЗнчКлассификаторЕдиницИзмерения, 1, ТекущаяЕдиницаИзмерения.Коэффициент));
		КонецЕсли;
		
		Если (ВыбраннаяЕдиницаИзмерения = Неопределено) Тогда
			СтруктураДанные.Вставить("ВыбранныйКоэффициент", 1);
		Иначе
			ТипЗнчКлассификаторЕдиницИзмерения = (ТипЗнч(ВыбраннаяЕдиницаИзмерения) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения"));
			СтруктураДанные.Вставить("ВыбранныйКоэффициент", ? (ТипЗнчКлассификаторЕдиницИзмерения, 1, ВыбраннаяЕдиницаИзмерения.Коэффициент));
		КонецЕсли;
		
		Возврат СтруктураДанные;
	КонецФункции
	
#КонецОбласти