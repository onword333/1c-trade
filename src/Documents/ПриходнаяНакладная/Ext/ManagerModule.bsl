#Область ПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти


#Область ОбработчикиСобытий
// Код процедур и функций
#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// Формирует запрос инициализации данных документа
// Возвращаемое значение: 
//	Строка
//
Функция ПолучитьТекстЗапросаИнициализироватьДанные()
	ТекстЗапроса = "ВЫБРАТЬ
	|	ПриходнаяНакладнаяЗапасы.Ссылка.Организация КАК Организация,
	|	ПриходнаяНакладнаяЗапасы.Ссылка.Склад КАК Склад,
	|	ПриходнаяНакладнаяЗапасы.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ПриходнаяНакладнаяЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА ПриходнаяНакладнаяЗапасы.Количество
	|		ИНАЧЕ ПриходнаяНакладнаяЗапасы.Количество * ПриходнаяНакладнаяЗапасы.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК Количество,
	|	ПриходнаяНакладнаяЗапасы.Сумма КАК Сумма,
	|	ПриходнаяНакладнаяЗапасы.Всего КАК Всего,
	|	ПриходнаяНакладнаяЗапасы.НомерСтроки КАК НомерСтроки,
	|	ПриходнаяНакладнаяЗапасы.Ссылка.Дата КАК Период
	|ПОМЕСТИТЬ ВременнаяТаблицаЗапасы
	|ИЗ
	|	Документ.ПриходнаяНакладная.Запасы КАК ПриходнаяНакладнаяЗапасы
	|ГДЕ
	|	ПриходнаяНакладнаяЗапасы.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;
КонецФункции


// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры СтруктураДополнительныеСвойства.
//
// Параметры:
//  - ДокументСсылкаПриходнаяНакладная - ДокументаСсылка.ПриходнаяНакладная - ссылка на документ приходная накладная
//  - СтруктураДополнительныеСвойства	- Структура - дополнительные свойства документа
//
Процедура СформироватьТаблицаЗапасыНаСкладах(ДокументСсылкаПриходнаяНакладная, СтруктураДополнительныеСвойства)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаЗапасыНаСкладах.НомерСтроки) КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаЗапасыНаСкладах.Период КАК Период,
	|	ТаблицаЗапасыНаСкладах.Организация КАК Организация,
	|	ТаблицаЗапасыНаСкладах.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасыНаСкладах.Склад КАК Склад,
	|	СУММА(ТаблицаЗапасыНаСкладах.Количество) КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасыНаСкладах
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗапасыНаСкладах.Период,
	|	ТаблицаЗапасыНаСкладах.Организация,
	|	ТаблицаЗапасыНаСкладах.Номенклатура,
	|	ТаблицаЗапасыНаСкладах.Склад";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыНаСкладах", РезультатЗапроса.Выгрузить());
КонецПроцедуры


// Инициализирует таблицы значений, содержащие данные таб. частей документа
//
// Параметры:
//  ДокументСсылкаПриходнаяНакладная  - ДокументСсылка.ПриходнаяНакладная - ссылка на документ
//  СтруктураДополнительныеСвойства  - Структура - дополнительные свойства документа
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылкаПриходнаяНакладная, СтруктураДополнительныеСвойства) Экспорт
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Текст = ПолучитьТекстЗапросаИнициализироватьДанные();
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПриходнаяНакладная);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.ВыполнитьПакет();
	
	СформироватьТаблицаЗапасыНаСкладах(ДокументСсылкаПриходнаяНакладная, СтруктураДополнительныеСвойства);	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

#КонецОбласти